[{"path":"https://dieghernan.github.io/rasterpic/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rasterpic authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dieghernan.github.io/rasterpic/articles/rasterpic.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Get Started","text":"use example shape Austria:","code":"library(sf) #> Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE library(terra) #> terra 1.5.12 library(rasterpic)  x <- st_read(system.file(\"gpkg/austria.gpkg\",   package = \"rasterpic\" ), quiet = TRUE ) img <- system.file(\"img/vertical.png\",   package = \"rasterpic\" )  # Create!  default <- rasterpic_img(x, img)  plotRGB(default) plot(st_geometry(x), add = TRUE, col = \"grey90\")"},{"path":"https://dieghernan.github.io/rasterpic/articles/rasterpic.html","id":"options","dir":"Articles","previous_headings":"","what":"Options","title":"Get Started","text":"function provides several options expanding, alignment cropping.","code":""},{"path":"https://dieghernan.github.io/rasterpic/articles/rasterpic.html","id":"expand","dir":"Articles","previous_headings":"Options","what":"Expand","title":"Get Started","text":"option image zoomed spatial object:","code":"expand <- rasterpic_img(x, img, expand = 1)  plotRGB(expand) plot(st_geometry(x), add = TRUE, col = \"grey90\")"},{"path":"https://dieghernan.github.io/rasterpic/articles/rasterpic.html","id":"alignment","dir":"Articles","previous_headings":"Options","what":"Alignment","title":"Get Started","text":"Decide align image:","code":"bottom <- rasterpic_img(x, img, valign = 0)  plotRGB(bottom) plot(st_geometry(x), add = TRUE, col = \"grey90\")"},{"path":"https://dieghernan.github.io/rasterpic/articles/rasterpic.html","id":"crop-and-mask","dir":"Articles","previous_headings":"Options","what":"Crop and mask","title":"Get Started","text":"Create impressive maps!:","code":"mask <- rasterpic_img(x, img, crop = TRUE, mask = TRUE)  plotRGB(mask) maskinverse <- rasterpic_img(x, img,   crop = TRUE,   mask = TRUE,   inverse = TRUE )  plotRGB(maskinverse)"},{"path":"https://dieghernan.github.io/rasterpic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego Hernangómez. Author, maintainer, copyright holder.","code":""},{"path":"https://dieghernan.github.io/rasterpic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernangómez D (2022). rasterpic: Create Spatial Raster Plain Images. doi: 10.5281/zenodo.5910095, https://dieghernan.github.io/rasterpic/.","code":"@Manual{,   title = {rasterpic: Create a Spatial Raster from Plain Images},   author = {Diego Hernangómez},   year = {2022},   version = {0.1.0},   doi = {10.5281/zenodo.5910095},   url = {https://dieghernan.github.io/rasterpic/},   abstract = {Creates a spatial raster, as the ones provided by 'terra', from regular pictures.}, }"},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"rasterpic-","dir":"","previous_headings":"","what":"Create a Spatial Raster from Plain Images","title":"Create a Spatial Raster from Plain Images","text":"rasterpic tiny package one single goal: transform image spatial raster.","code":""},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create a Spatial Raster from Plain Images","text":"can install developing version rasterpic : Alternatively, can install rasterpic using r-universe:","code":"devtools::install_github(\"dieghernan/rasterpic\") # Enable this universe options(repos = c(   dieghernan = \"https://dieghernan.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) install.packages(\"rasterpic\")"},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create a Spatial Raster from Plain Images","text":"package allows create cool maps using pre-existing spatial object (sf SpatRaster) geotagging regular image using metadata object.  can also play parameters, well modifying alignment image respect object:","code":"library(rasterpic) library(sf) library(terra)  # The flag of the United Kingdom img <- system.file(\"img/UK_flag.png\",   package = \"rasterpic\" ) uk <- st_read(system.file(\"gpkg/UK.gpkg\",   package = \"rasterpic\" ), quiet = TRUE )  # Rasterize! uk_flag <- rasterpic_img(uk, img)  uk_flag #> class       : SpatRaster  #> dimensions  : 400, 800, 3  (nrow, ncol, nlyr) #> resolution  : 5398.319, 5398.319  (x, y) #> extent      : -2542183, 1776472, 6430573, 8589900  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / Pseudo-Mercator (EPSG:3857)  #> source      : memory  #> names       : lyr.1, lyr.2, lyr.3  #> min values  :     0,    13,    34  #> max values  :   255,   255,   255  # Plot it!  plotRGB(uk_flag) plot(st_geometry(uk),   add = TRUE,   col = adjustcolor(\"blue\",     alpha.f = 0.5   ) ) # Align, crop and mask uk_flag2 <- rasterpic_img(uk, img, halign = 0.2, crop = TRUE, mask = TRUE)  plot(st_geometry(uk), axes = TRUE) plotRGB(uk_flag2, add = TRUE) plot(st_geometry(uk), col = NA, border = \"black\", add = TRUE)"},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"image-formats-admitted","dir":"","previous_headings":"","what":"Image formats admitted","title":"Create a Spatial Raster from Plain Images","text":"rasterpic can parse following image formats: png files. jpg/jpeg files. tif/tiff files.","code":""},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Create a Spatial Raster from Plain Images","text":"cite rasterpic package publications use: Hernangómez D (2022). rasterpic: Create Spatial Raster Plain Images. doi: 10.5281/zenodo.5910095 (URL: https://doi.org/10.5281/zenodo.5910095), <URL: https://dieghernan.github.io/rasterpic/>. BibTeX entry LaTeX users :","code":"@Manual{,   title = {rasterpic: Create a Spatial Raster from Plain Images},   author = {Diego Hernangómez},   year = {2022},   version = {0.1.0},   doi = {10.5281/zenodo.5910095},   url = {https://dieghernan.github.io/rasterpic/},   abstract = {Creates a spatial raster, as the ones provided by 'terra', from regular pictures.}, }"},{"path":"https://dieghernan.github.io/rasterpic/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Create a Spatial Raster from Plain Images","text":"Check GitHub page source code.","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/asp_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute aspect ratio of an object — asp_ratio","title":"Compute aspect ratio of an object — asp_ratio","text":"Helper function. Ratio computed width/height (col/rows).","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/asp_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute aspect ratio of an object — asp_ratio","text":"","code":"asp_ratio(x)"},{"path":"https://dieghernan.github.io/rasterpic/reference/asp_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute aspect ratio of an object — asp_ratio","text":"x SpatRaster object, sf/sfc object numeric vector length 4 coordinates c(xmin, ymin, xmax, ymax), created sf::st_bbox()","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/asp_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute aspect ratio of an object — asp_ratio","text":"aspect ratio","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/asp_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute aspect ratio of an object — asp_ratio","text":"","code":"library(terra) #> terra 1.5.12  x <- rast(system.file(\"tiff/elev.tiff\", package = \"rasterpic\")) plot(x)  asp_ratio(x) #> [1] 2.34375"},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","title":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","text":"Creates spatial raster, ones provided 'terra', regular pictures.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an image to a geo-tagged raster — rasterpic_img","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"Geotags image based coordinates given spatial object.","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"","code":"rasterpic_img(   x,   img,   halign = 0.5,   valign = 0.5,   expand = 0,   crop = FALSE,   mask = FALSE,   inverse = FALSE )"},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"x sf sfc object (sf package) SpatRaster object (terra package). img image geotagged. following image extensions accepted: png jpeg/jpg tiff/tif halign Horizontal alignment img respect x object. value 0 (x aligned left edge raster) 1 (x right edge raster). valign Vertical alignment img respect x object. value 0 (x aligned bottom edge raster) 1 (x top edge raster). expand expansion factor bounding box x. 0 means expansion added, 1 means bounding box expanded double original size. crop Logical. raster cropped (expanded) bounding box x? mask Logical. raster masked x? See terra::mask() details. option valid x sf/sfc object. inverse Logical. affects mask = TRUE. TRUE, areas raster overlap x masked.","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"SpatRaster object.","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"function preserves Coordinate Reference System x object. optimal results use geographic coordinates (longitude/latitude).","code":""},{"path":"https://dieghernan.github.io/rasterpic/reference/rasterpic_img.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"","code":"# \\donttest{ library(sf) #> Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE library(terra)  x_path <- system.file(\"gpkg/UK.gpkg\", package = \"rasterpic\") x <- st_read(x_path, quiet = TRUE) img <- system.file(\"img/vertical.png\", package = \"rasterpic\")  # Default config ex1 <- rasterpic_img(x, img)  class(ex1) #> [1] \"SpatRaster\" #> attr(,\"package\") #> [1] \"terra\"   plotRGB(ex1) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Expand ex2 <- rasterpic_img(x,   img,   expand = 0.5 )  plotRGB(ex2) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Align ex3 <- rasterpic_img(x,   img,   halign = 0 )  plotRGB(ex3) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Crop ex4 <- rasterpic_img(x,   img,   crop = TRUE )  plotRGB(ex4) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Mask ex5 <- rasterpic_img(x,   img,   mask = TRUE )  plotRGB(ex5) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )    # Mask inverse ex6 <- rasterpic_img(x,   img,   mask = TRUE,   inverse = TRUE )  plotRGB(ex6) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )    # Combine Mask inverse and crop ex7 <- rasterpic_img(x,   img,   crop = TRUE,   mask = TRUE,   inverse = TRUE )  plotRGB(ex7) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )  # }"},{"path":"https://dieghernan.github.io/rasterpic/news/index.html","id":"rasterpic-010","dir":"Changelog","previous_headings":"","what":"rasterpic 0.1.0","title":"rasterpic 0.1.0","text":"CRAN release: 2022-01-27 Initial release","code":""}]
