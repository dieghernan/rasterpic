[{"path":"https://dieghernan.github.io/rasterpic/dev/articles/plots.html","id":"base-plots","dir":"Articles","previous_headings":"","what":"Base plots","title":"Plotting terra rasters","text":"straightforward option use base plot() methods provided package terra (terra::plotRGB())","code":"library(rasterpic) library(terra)  # The flag of the United Kingdom img <- system.file(\"img/UK_flag.png\",   package = \"rasterpic\" )  uk <- sf::st_read(   system.file(\"gpkg/UK.gpkg\",     package = \"rasterpic\"   ),   quiet = TRUE )  uk_img <- rasterpic_img(uk, img, mask = TRUE, inverse = TRUE) plotRGB(uk_img)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/plots.html","id":"with-ggplot2-tidyterra","dir":"Articles","previous_headings":"","what":"With ggplot2 + tidyterra","title":"Plotting terra rasters","text":"tidyterra provides full support terra rasters:","code":"library(ggplot2) library(tidyterra)  ggplot() +   geom_spatraster_rgb(data = uk_img)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/plots.html","id":"with-tmap","dir":"Articles","previous_headings":"","what":"With tmap","title":"Plotting terra rasters","text":"tmap can also used create great maps:","code":"library(tmap)  tm_shape(uk_img) +   tm_graticules() +   tm_rgb()"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/plots.html","id":"with-mapsf","dir":"Articles","previous_headings":"","what":"With mapsf","title":"Plotting terra rasters","text":"mapsf, replacement cartography, also provides functionality:","code":"library(mapsf)  mf_raster(uk_img) mf_scale() mf_inset_on(x = \"worldmap\", pos = \"topright\") mf_worldmap(uk) mf_inset_off()"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/plots.html","id":"with-maptiles","dir":"Articles","previous_headings":"","what":"With maptiles","title":"Plotting terra rasters","text":"maptiles interesting package provides ability downloading map tiles different providers. also specific function plotting terra rasters:","code":"library(maptiles)  other_tile <- get_tiles(uk, crop = TRUE, zoom = 6)  other_tile_crop <- terra::crop(other_tile, uk_img)  plot_tiles(other_tile_crop) plot_tiles(uk_img, add = TRUE)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Get Started","text":"use example shape Austria:","code":"library(sf) library(terra) library(rasterpic)  # Plot library(tidyterra) library(ggplot2)  # Shape and image x <- read_sf(system.file(\"gpkg/austria.gpkg\", package = \"rasterpic\")) img <- system.file(\"img/vertical.png\", package = \"rasterpic\")  # Create!  default <- rasterpic_img(x, img)  autoplot(default) +   geom_sf(data = x)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"options","dir":"Articles","previous_headings":"","what":"Options","title":"Get Started","text":"function provides several options expanding, alignment cropping.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"expand","dir":"Articles","previous_headings":"Options","what":"Expand","title":"Get Started","text":"option image zoomed spatial object:","code":"expand <- rasterpic_img(x, img, expand = 1)   autoplot(expand) +   geom_sf(data = x)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"alignment","dir":"Articles","previous_headings":"Options","what":"Alignment","title":"Get Started","text":"Decide align image:","code":"bottom <- rasterpic_img(x, img, valign = 0)  autoplot(bottom) +   geom_sf(data = x)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"crop-and-mask","dir":"Articles","previous_headings":"Options","what":"Crop and mask","title":"Get Started","text":"Create impressive maps!:","code":"mask <- rasterpic_img(x, img, crop = TRUE, mask = TRUE)  autoplot(mask) maskinverse <- rasterpic_img(x, img, crop = TRUE, mask = TRUE, inverse = TRUE)  autoplot(maskinverse)"},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"objects-admitted-for-geotagging","dir":"Articles","previous_headings":"","what":"Objects admitted for geotagging","title":"Get Started","text":"Spatial object sf package: sf, sfc, sfgor bbox. Spatial objects terra package: SpatRaster, SpatVector, SpatExtent. vector coordinates form c(xmin, ymin, xmax, yman)","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/articles/rasterpic.html","id":"image-formats-admitted","dir":"Articles","previous_headings":"","what":"Image formats admitted","title":"Get Started","text":"rasterpic can parse following image formats: png files. jpg/jpeg files. tif/tiff files.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego Hernangómez. Author, maintainer, copyright holder.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernangomez D (2023). rasterpic: Create Spatial Raster Plain Images. <https://doi.org/10.5281/zenodo.5910095>, <https://dieghernan.github.io/rasterpic/>","code":"@Manual{R-rasterpic,   title = {rasterpic: Create a Spatial Raster from Plain Images},   author = {Diego Hernangómez},   year = {2023},   version = {0.2.1.9000},   doi = {10.5281/zenodo.5910095},   url = {https://dieghernan.github.io/rasterpic/},   abstract = {Create a spatial raster, as the ones provided by terra, from regular pictures.}, }"},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"rasterpic-","dir":"","previous_headings":"","what":"Create a Spatial Raster from Plain Images","title":"Create a Spatial Raster from Plain Images","text":"rasterpic tiny package one single goal: transform image spatial raster.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create a Spatial Raster from Plain Images","text":"Install rasterpic CRAN: can install developing version rasterpic : Alternatively, can install rasterpic using r-universe:","code":"install.packages(\"rasterpic\") devtools::install_github(\"dieghernan/rasterpic\") # Enable this universe options(repos = c(   dieghernan = \"https://dieghernan.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" )) install.packages(\"rasterpic\")"},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Create a Spatial Raster from Plain Images","text":"package allows create cool maps using wide variety objects: Spatial object sf package: sf, sfc, sfgor bbox. Spatial objects terra package: SpatRaster, SpatVector, SpatExtent. vector coordinates form c(xmin, ymin, xmax, yman) example using sf object:  can also play parameters, well modifying alignment image respect object:","code":"library(rasterpic) library(sf) library(terra)  # The flag of the United Kingdom img <- system.file(\"img/UK_flag.png\", package = \"rasterpic\") uk <- read_sf(system.file(\"gpkg/UK.gpkg\", package = \"rasterpic\"))  # Rasterize! uk_flag <- rasterpic_img(uk, img)  uk_flag #> class       : SpatRaster  #> dimensions  : 400, 800, 3  (nrow, ncol, nlyr) #> resolution  : 5398.319, 5398.319  (x, y) #> extent      : -2542183, 1776472, 6430573, 8589900  (xmin, xmax, ymin, ymax) #> coord. ref. : WGS 84 / Pseudo-Mercator (EPSG:3857)  #> source(s)   : memory #> colors RGB  : 1, 2, 3  #> names       : lyr.1, lyr.2, lyr.3  #> min values  :     0,    13,    34  #> max values  :   255,   255,   255  # Plot it! # Using ggplot2 + tidyterra library(tidyterra) library(ggplot2)  autoplot(uk_flag) +   geom_sf(data = uk, color = alpha(\"blue\", 0.5)) # Align, crop and mask uk_flag2 <- rasterpic_img(uk, img, halign = 0.2, crop = TRUE, mask = TRUE)  autoplot(uk_flag2) +   geom_sf(data = uk, fill = NA)"},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"image-formats-admitted","dir":"","previous_headings":"","what":"Image formats admitted","title":"Create a Spatial Raster from Plain Images","text":"rasterpic can parse following image formats: png files. jpg/jpeg files. tif/tiff files.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Create a Spatial Raster from Plain Images","text":"cite ‘rasterpic’ publications use: Hernangomez D (2023). rasterpic: Create Spatial Raster Plain Images. https://doi.org/10.5281/zenodo.5910095, https://dieghernan.github.io/rasterpic/ BibTeX entry LaTeX users :","code":"@Manual{R-rasterpic,   title = {rasterpic: Create a Spatial Raster from Plain Images},   author = {Diego Hernangómez},   year = {2023},   version = {0.2.1.9000},   doi = {10.5281/zenodo.5910095},   url = {https://dieghernan.github.io/rasterpic/},   abstract = {Create a spatial raster, as the ones provided by terra, from regular pictures.}, }"},{"path":"https://dieghernan.github.io/rasterpic/dev/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Create a Spatial Raster from Plain Images","text":"Check GitHub page source code.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rasterpic authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/asp_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute aspect ratio of an object — asp_ratio","title":"Compute aspect ratio of an object — asp_ratio","text":"Helper function. Ratio computed width/height (col/rows).","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/asp_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute aspect ratio of an object — asp_ratio","text":"","code":"asp_ratio(x)"},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/asp_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute aspect ratio of an object — asp_ratio","text":"x SpatRaster object, sf/sfc object numeric vector length 4 coordinates c(xmin, ymin, xmax, ymax), created sf::st_bbox()","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/asp_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute aspect ratio of an object — asp_ratio","text":"aspect ratio","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/asp_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute aspect ratio of an object — asp_ratio","text":"","code":"library(terra) #> terra 1.7.23  x <- rast(system.file(\"tiff/elev.tiff\", package = \"rasterpic\")) plot(x)  asp_ratio(x) #> [1] 2.34375"},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","title":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","text":"Create spatial raster, ones provided 'terra', regular pictures.","code":""},{"path":[]},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rasterpic: Create a Spatial Raster from Plain Images — rasterpic-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an image to a geo-tagged raster — rasterpic_img","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"Geotags image based coordinates given spatial object.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"","code":"rasterpic_img(   x,   img,   halign = 0.5,   valign = 0.5,   expand = 0,   crop = FALSE,   mask = FALSE,   inverse = FALSE,   crs )"},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"x sf, sfc, sfg bounding box (see sf::st_bbox()) object (sf package). SpatRaster, SpatVector SpatExtent object (terra package). numeric vector length 4 extent used geotagging ( .e. c(xmin, ymin, xmax, ymax)). img image geotagged. can local file online file (e.g. \"https://.imgur.com/6yHmlwT.jpeg\"). following image extensions accepted: png jpeg/jpg tiff/tif halign Horizontal alignment img respect x object. value 0 (x aligned left edge raster) 1 (x right edge raster). valign Vertical alignment img respect x object. value 0 (x aligned bottom edge raster) 1 (x top edge raster). expand expansion factor bounding box x. 0 means expansion added, 1 means bounding box expanded double original size. crop Logical. raster cropped (expanded) bounding box x? mask Logical. raster masked x? See terra::mask() details. option valid x sf/sfc object. inverse Logical. affects mask = TRUE. TRUE, areas raster overlap x masked. crs Character string describing coordinate reference system. parameter affect x present Coordinate Reference System (e.g. x SpatExtent, sfg bbox vector coordinates). See Details","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"SpatRaster object.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"function preserves Coordinate Reference System x object. optimal results use geographic coordinates (longitude/latitude). crs can WKT format, \"authority:number\" code \"EPSG:4326\", PROJ-string format \"+proj=utm +zone=12\". can also retrieved sf::st_crs(25830)$wkt. See value Notes terra::crs().","code":""},{"path":[]},{"path":"https://dieghernan.github.io/rasterpic/dev/reference/rasterpic_img.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an image to a geo-tagged raster — rasterpic_img","text":"","code":"# \\donttest{ library(sf) #> Linking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE library(terra)  x_path <- system.file(\"gpkg/UK.gpkg\", package = \"rasterpic\") x <- st_read(x_path, quiet = TRUE) img <- system.file(\"img/vertical.png\", package = \"rasterpic\")  # Default config ex1 <- rasterpic_img(x, img)  class(ex1) #> [1] \"SpatRaster\" #> attr(,\"package\") #> [1] \"terra\"   plotRGB(ex1) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Expand ex2 <- rasterpic_img(x,   img,   expand = 0.5 )  plotRGB(ex2) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Align ex3 <- rasterpic_img(x,   img,   halign = 0 )  plotRGB(ex3) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Crop ex4 <- rasterpic_img(x,   img,   crop = TRUE )  plotRGB(ex4) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )   # Mask ex5 <- rasterpic_img(x,   img,   mask = TRUE )  plotRGB(ex5) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )    # Mask inverse ex6 <- rasterpic_img(x,   img,   mask = TRUE,   inverse = TRUE )  plotRGB(ex6) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )    # Combine Mask inverse and crop ex7 <- rasterpic_img(x,   img,   crop = TRUE,   mask = TRUE,   inverse = TRUE )  plotRGB(ex7) plot(x$geom,   add = TRUE,   col = NA,   border = \"white\",   lwd = 2 )  # }"},{"path":"https://dieghernan.github.io/rasterpic/dev/news/index.html","id":"rasterpic-development-version","dir":"Changelog","previous_headings":"","what":"rasterpic (development version)","title":"rasterpic (development version)","text":"Remove unused dependencies Improve docs. Fix typos messages. Declares output RGB raster terra::RGB(). Add ggplot2 “Suggests”.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/news/index.html","id":"rasterpic-021","dir":"Changelog","previous_headings":"","what":"rasterpic 0.2.1","title":"rasterpic 0.2.1","text":"CRAN release: 2022-06-10 Add tidyterra ‘Suggests’","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/news/index.html","id":"rasterpic-020","dir":"Changelog","previous_headings":"","what":"rasterpic 0.2.0","title":"rasterpic 0.2.0","text":"CRAN release: 2022-02-18 Add support : terra: SpatVector, SpatExtent, sf: sfg, sf::st_bbox(). Numeric vectors c(xmin, ymin, xmax, ymax) Now img parameter rasterpic_img() accepts online images. Add article pkgdown site Fix CRAN errors.","code":""},{"path":"https://dieghernan.github.io/rasterpic/dev/news/index.html","id":"rasterpic-010","dir":"Changelog","previous_headings":"","what":"rasterpic 0.1.0","title":"rasterpic 0.1.0","text":"CRAN release: 2022-01-27 Initial release","code":""}]
